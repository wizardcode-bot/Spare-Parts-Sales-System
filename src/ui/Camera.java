package ui;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import common.Validations;

/**
 *
 * @author HOME
 */
public class Camera extends javax.swing.JFrame {
    
    private String username = "";

    /**
     * Creates new form Camera
     */
    //dimensiones del cuadro de la cámara
    int heightCamera = 270;
    int widthCamera = 260;
    BufferedImage ruta;
    int counter = 1;

    Dimension dimension = new Dimension(heightCamera, widthCamera);
    Dimension dimension1 = WebcamResolution.VGA.getSize(); // configurar según resolución de la cámara
    Webcam webcam = Webcam.getDefault();
    String cameraName = sanitizeString(webcam.toString());
    WebcamPanel webcamPanel = new WebcamPanel(webcam, dimension, false);

    public Camera() {
        initComponents();
    }
    
    public Camera(String tempUsername) {
        initComponents();
        this.username = tempUsername;

        setSize(850, 500);
        setLocationRelativeTo(null);

        webcam.setViewSize(dimension1);
        webcamPanel.setFillArea(true);
        pnlCamera.setLayout(new FlowLayout());
        pnlCamera.add(webcamPanel);

        lblCameraName.setText(cameraName);
        deactivateButtons();
    }

    private String sanitizeString(String input) {
        return input.replaceAll("[^\\p{Print}]", "i"); // Elimina caracteres no imprimibles
    }

    public void deactivateButtons() {
        btnPowerOFF.setEnabled(false);
        btnTakePhoto.setEnabled(false);
        btnSavePhoto.setEnabled(false);
    }

    public void activateButtons() {
        btnPowerOFF.setEnabled(true);
        btnTakePhoto.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPowerON = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblCameraName = new javax.swing.JLabel();
        btnPowerOFF = new javax.swing.JButton();
        btnSavePhoto = new javax.swing.JButton();
        btnTakePhoto = new javax.swing.JButton();
        pnlCamera = new javax.swing.JPanel();
        lblTakenPhoto = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Opciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPowerON.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPowerON.setForeground(new java.awt.Color(0, 0, 0));
        btnPowerON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/turnON.png"))); // NOI18N
        btnPowerON.setText("Encender cámara");
        btnPowerON.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPowerON.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPowerON.setMargin(new java.awt.Insets(5, 14, 2, 14));
        btnPowerON.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnPowerON.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPowerON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerONActionPerformed(evt);
            }
        });
        jPanel1.add(btnPowerON, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, 200, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Cámara en uso:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 308, -1, -1));

        lblCameraName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCameraName.setForeground(new java.awt.Color(0, 0, 0));
        lblCameraName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCameraName.setText("-");
        lblCameraName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel1.add(lblCameraName, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 359, 220, -1));

        btnPowerOFF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPowerOFF.setForeground(new java.awt.Color(0, 0, 0));
        btnPowerOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/turnOFF.png"))); // NOI18N
        btnPowerOFF.setText("Apagar cámara");
        btnPowerOFF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPowerOFF.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPowerOFF.setMargin(new java.awt.Insets(5, 14, 2, 14));
        btnPowerOFF.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnPowerOFF.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPowerOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerOFFActionPerformed(evt);
            }
        });
        jPanel1.add(btnPowerOFF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 184, 200, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 55, 240, 402));

        btnSavePhoto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSavePhoto.setForeground(new java.awt.Color(0, 0, 0));
        btnSavePhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/savePhoto.png"))); // NOI18N
        btnSavePhoto.setText("Guardar fotografía");
        btnSavePhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSavePhoto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSavePhoto.setIconTextGap(10);
        btnSavePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePhotoActionPerformed(evt);
            }
        });
        getContentPane().add(btnSavePhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(603, 394, -1, 63));

        btnTakePhoto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTakePhoto.setForeground(new java.awt.Color(0, 0, 0));
        btnTakePhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/takePhoto.png"))); // NOI18N
        btnTakePhoto.setText("Tomar fotografía");
        btnTakePhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTakePhoto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTakePhoto.setIconTextGap(10);
        btnTakePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakePhotoActionPerformed(evt);
            }
        });
        getContentPane().add(btnTakePhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 394, -1, -1));

        pnlCamera.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlCameraLayout = new javax.swing.GroupLayout(pnlCamera);
        pnlCamera.setLayout(pnlCameraLayout);
        pnlCameraLayout.setHorizontalGroup(
            pnlCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );
        pnlCameraLayout.setVerticalGroup(
            pnlCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        getContentPane().add(pnlCamera, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 100, -1, -1));

        lblTakenPhoto.setBackground(new java.awt.Color(0, 0, 0));
        lblTakenPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lblTakenPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 108, 240, 237));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(804, 6, -1, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(559, 76, -1, 300));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/all_pages_background.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPowerONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerONActionPerformed
        //botón encender cámara
        btnPowerON.setText("Encendiendo cámara...");

        Thread hilo = new Thread() {
            @Override
            public void run() {
                webcamPanel.start();
                activateButtons();
                btnPowerON.setText("Cámara encendida");
            }
        };

        hilo.setDaemon(true);
        hilo.start();
        btnPowerON.setEnabled(false);
    }//GEN-LAST:event_btnPowerONActionPerformed

    private void btnPowerOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerOFFActionPerformed
        // botón apagar cámara
        webcamPanel.stop();
        deactivateButtons();
        btnPowerON.setEnabled(true);
        btnPowerON.setText("Encender cámara");
        btnTakePhoto.setText("Tomar fotografía");

        lblTakenPhoto.setIcon(null);
    }//GEN-LAST:event_btnPowerOFFActionPerformed

    private void btnTakePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakePhotoActionPerformed
        // botón de tomar foto
        btnTakePhoto.setText("Tomar otra fotografía");
        btnSavePhoto.setEnabled(true);

        ImageIcon foto = new ImageIcon(webcam.getImage());
        Icon iconofoto = new ImageIcon(foto.getImage().getScaledInstance(lblTakenPhoto.getWidth(), lblTakenPhoto.getHeight(), Image.SCALE_SMOOTH));
        lblTakenPhoto.setIcon(iconofoto);

        ruta = webcam.getImage();
    }//GEN-LAST:event_btnTakePhotoActionPerformed

    private void btnSavePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePhotoActionPerformed
        // botón para guardar foto

        int a = JOptionPane.showOptionDialog(null, "¿Quieres guardar esta fotografía?", "Selecciona una opción",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sí", "No"}, "Sí");

        if (a == 0) {
            String userID = Validations.getIDByUsername(username);
            String photoName = userID; //nombre de la foto
            //ruta para guardar imágenes
            File outputFile = new File("C:\\Users\\HOME\\Documents\\NetBeansProjects\\Inventory Management System\\src\\images\\profile\\" + photoName + ".jpg");

            try {
                ImageIO.write(ruta, "jpg", outputFile);
                JOptionPane.showMessageDialog(null, "Imagen guardada en: " + outputFile.getAbsolutePath());
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error" + e + JOptionPane.ERROR_MESSAGE);
            }

            lblTakenPhoto.setIcon(null);//quitar la foto del label
            btnSavePhoto.setEnabled(false);
            btnTakePhoto.setText("Tomar fotografía");
        }
    }//GEN-LAST:event_btnSavePhotoActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Camera().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPowerOFF;
    private javax.swing.JButton btnPowerON;
    private javax.swing.JButton btnSavePhoto;
    private javax.swing.JButton btnTakePhoto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCameraName;
    private javax.swing.JLabel lblTakenPhoto;
    private javax.swing.JPanel pnlCamera;
    // End of variables declaration//GEN-END:variables
}
